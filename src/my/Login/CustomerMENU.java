package my.Login;
import javax.swing.*;
import java.awt.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import my.Classes.*;


public class CustomerMENU extends javax.swing.JFrame implements FileLocationInterface {
    private Vendor vendor;

    public CustomerMENU(Vendor vendor) {
        this.vendor = vendor;
        initComponents();
        setupUI();
    }

    /**
     * Creates new form NewJFrame
     */
    public CustomerMENU() {
        initComponents();
        setupUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        checkbox1 = new java.awt.Checkbox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        checkbox1.setLabel("checkbox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("MENU");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MENU ID", "NAME", "PRICE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButton1.setText("ADD TO CART");

        jButton2.setText("OPEN CART");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "STARS", "CUSTOMERID", "FEEDBACK"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(281, 281, 281)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(338, 338, 338))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setupUI() {
        /*
        jTable1.setModel(new DefaultTableModel(
        new Object[][] {},
        new String[] {"MENU ID", "NAME", "PRICE"}
    ) {
        Class[] columnTypes = new Class[] {
            Integer.class, String.class, Double.class
        };
        public Class getColumnClass(int columnIndex) {
            return columnTypes[columnIndex];
        }
    });

jList1.addListSelectionListener(new ListSelectionListener() {
    public void valueChanged(ListSelectionEvent event) {
        if (!event.getValueIsAdjusting()) {
            Vendor selectedVendor = Vendor.getSelectedValue();
            if (selectedVendor != null) {
                createMenuTableForVendor(selectedVendor);
            }
        }
    }
});
*/
    // Example vendors (replace with your actual vendor data)
   
    try {

              List<Vendor> vendors = FileHandler.readVendorsFromFile("C:\\Users\\Mohamed Abdihakim\\Downloads\\vendors.txt");

        // Create a model for the vendor list
        DefaultListModel<String> vendorListModel = new DefaultListModel<>();
        for (Vendor vendor : vendors) {
            vendorListModel.addElement(vendor.getVendorName()); // Assuming Vendor has a getVendorName() method
        }
        

        // Create the vendor list
        JList<String> vendorList = new JList<>(vendorListModel);

        // Add a ListSelectionListener to the vendor list
        vendorList.addListSelectionListener(new ListSelectionListener() {
            @Override
             public void valueChanged(ListSelectionEvent e) {
        if (!e.getValueIsAdjusting()) {
            int selectedIndex = vendorList.getSelectedIndex();
            if (selectedIndex != -1) {
                Vendor selectedVendor = vendors.get(selectedIndex);
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        createMenuTableForVendor(selectedVendor);
                    
                        

                    }
                         });
                    }
                }
            }
        });

        // Add the vendor list to your layout (you might need to customize this based on your layout)
        JScrollPane vendorScrollPane = new JScrollPane(vendorList);
        // Add vendorScrollPane to your form as needed
        // For example:
        // layout.add(vendorScrollPane, BorderLayout.WEST);
    } catch (IOException e) {
        e.printStackTrace();
    }

    
       

    // Add other UI setup code as needed

    
    }
    
    
    private void createMenuTableForVendor(Vendor vendor) {
        
    // Your logic to load menu data for the given vendor
   List<String[]> menuItems = loadMenuForVendor(vendor);

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0);

    for (String[] menuItem : menuItems) {
        model.addRow(new Object[] {Integer.parseInt(menuItem[0]), menuItem[1], Double.parseDouble(menuItem[2])});
    }
   
    }
/*
    
    JTable menuTable = new JTable();

    // Add the menu items to the table
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("MENU ID");
    model.addColumn("NAME");
    model.addColumn("PRICE");

    for (String[] menuItem : menuItems) {
        //String[] itemData = menuItem.split(",");
        System.out.print(String.join("," ,menuItem) + "\n");
        model.addRow(String.join(",", menuItem).split(","));
    }

    jTable1.setModel(model);

    // Add the table to your layout (you might need to customize this based on your layout)
    // For example, you can add it to a JScrollPane and then add the JScrollPane to your form
    JScrollPane scrollPane = new JScrollPane(menuTable);
    // Add scrollPane to your form as needed
}
    */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 CustomerMENU menuFrame = new CustomerMENU();
            menuFrame.setVisible(true);
            menuFrame.setupUI();
            }
        });
    }
    
    private List<String[]> loadMenuForVendor(Vendor vendor) {
        
        List<String[]> menuItems = new ArrayList<>();

    
        String filePath = "C:\\Users\\Mohamed Abdihakim\\Downloads\\menu_" + vendor.getUserId() + ".txt";


        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");

                menuItems.add(data); 
            }
        } catch (IOException e) {
            System.err.println("Error loading menu for vendor: " + e.getMessage());
            e.printStackTrace();// Handle the exception appropriately in a real application
        }

        return menuItems;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Checkbox checkbox1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
